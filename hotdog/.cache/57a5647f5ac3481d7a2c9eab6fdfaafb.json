{"dependencies":[{"name":"/Users/sanghan/Desktop/tfjs-examples/mobilenet/package.json","includedInParent":true,"mtime":1522644996454},{"name":"/Users/sanghan/Desktop/tfjs-examples/mobilenet/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":0},{"name":"../doc","loc":{"line":9,"column":20}},{"name":"../environment","loc":{"line":10,"column":28}},{"name":"../util","loc":{"line":11,"column":19}},{"name":"./operation","loc":{"line":12,"column":26}}],"generated":{"js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar util = require(\"../util\");\nvar operation_1 = require(\"./operation\");\nvar MatmulOps = (function () {\n    function MatmulOps() {\n    }\n    MatmulOps.matMul = function (a, b, transposeA, transposeB) {\n        if (transposeA === void 0) { transposeA = false; }\n        if (transposeB === void 0) { transposeB = false; }\n        var innerShapeA = transposeA ? a.shape[0] : a.shape[1];\n        var innerShapeB = transposeB ? b.shape[1] : b.shape[0];\n        util.assert(a.rank === 2 && b.rank === 2, \"Error in matMul: inputs must be rank 2, got ranks \" + a.rank +\n            (\" and \" + b.rank + \".\"));\n        util.assert(innerShapeA === innerShapeB, \"Error in matMul: inner shapes (\" + innerShapeA + \") and (\" +\n            (innerShapeB + \") of Tensors with shapes \" + a.shape + \" and \") +\n            (b.shape + \" and transposeA=\" + transposeA) +\n            (\" and transposeB=\" + transposeB + \" must match.\"));\n        var grad = function (dy) {\n            if (transposeA || transposeB) {\n                throw new Error(\"Backprop for transposed MatMul not yet implemented.\");\n            }\n            return {\n                a: function () { return dy.matMul(b.toFloat(), false, true); },\n                b: function () { return a.toFloat().matMul(dy, true, false); }\n            };\n        };\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.matMul(a, b, transposeA, transposeB); }, { a: a, b: b }, grad);\n    };\n    MatmulOps.vectorTimesMatrix = function (v, matrix) {\n        util.assert(v.rank === 1, \"Error in vectorTimesMatrix: first input must be rank 1, but got \" +\n            (\"rank \" + v.rank + \".\"));\n        util.assert(matrix.rank === 2, \"Error in vectorTimesMatrix: second input must be rank 2, but got \" +\n            (\"rank \" + matrix.rank + \".\"));\n        util.assert(v.size === matrix.shape[0], \"Error in vectorTimesMatrix: size of vector (\" + v.size + \") \" +\n            (\"must match first dimension of matrix (\" + matrix.shape[0] + \")\"));\n        return v.as2D(1, -1).matMul(matrix).as1D();\n    };\n    MatmulOps.matrixTimesVector = function (matrix, v) {\n        util.assert(v.rank === 1, \"Error in matrixTimesVector: second input must rank 1, but got \" +\n            (\"rank \" + v.rank + \".\"));\n        util.assert(matrix.rank === 2, \"Error in matrixTimesVector: first input must be a rank 2, but got \" +\n            (\"rank \" + matrix.rank + \".\"));\n        util.assert(v.size === matrix.shape[1], \"Error in matrixTimesVector: size of first rank 1 input \" + v.size + \" \" +\n            \"must match inner dimension of second rank 2 input, but got \" +\n            (\"shape \" + matrix.shape + \".\"));\n        return matrix.matMul(v.as2D(-1, 1)).as1D();\n    };\n    MatmulOps.dotProduct = function (v1, v2) {\n        util.assert(v1.rank === 1 && v2.rank === 1, \"Error in dotProduct: inputs must be rank 1, but got ranks \" +\n            (v1.rank + \" and \" + v2.rank + \".\"));\n        util.assert(v1.size === v2.size, \"Error in dotProduct: size of inputs (\" + v1.size + \") and (\" +\n            (v2.size + \") must match.\"));\n        return v1.as2D(1, -1).matMul(v2.as2D(-1, 1)).asScalar();\n    };\n    MatmulOps.outerProduct = function (v1, v2) {\n        util.assert(v1.rank === 1 && v2.rank === 1, \"Error in outerProduct: inputs must be rank 1, but got ranks \" +\n            (v1.rank + \" and \" + v2.rank + \".\"));\n        return v1.as2D(-1, 1).matMul(v2.as2D(1, -1));\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Matrices' }),\n        operation_1.operation\n    ], MatmulOps, \"matMul\", null);\n    __decorate([\n        operation_1.operation\n    ], MatmulOps, \"vectorTimesMatrix\", null);\n    __decorate([\n        operation_1.operation\n    ], MatmulOps, \"matrixTimesVector\", null);\n    __decorate([\n        operation_1.operation\n    ], MatmulOps, \"dotProduct\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Matrices' }),\n        operation_1.operation\n    ], MatmulOps, \"outerProduct\", null);\n    return MatmulOps;\n}());\nexports.MatmulOps = MatmulOps;\n"},"hash":"3e85ee3e7de839d424090c906c497d5e","cacheData":{"env":{}}}
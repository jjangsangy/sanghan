{"dependencies":[{"name":"/Users/sanghan/Desktop/hotdog/package.json","includedInParent":true,"mtime":1522646366212},{"name":"/Users/sanghan/Desktop/hotdog/node_modules/@tensorflow/tfjs-layers/package.json","includedInParent":true,"mtime":1522260134000},{"name":"../backend/tfjs_backend","loc":{"line":13,"column":16}},{"name":"../common","loc":{"line":14,"column":23}},{"name":"../engine/topology","loc":{"line":16,"column":25}},{"name":"../errors","loc":{"line":17,"column":23}},{"name":"../utils/conv_utils","loc":{"line":18,"column":27}},{"name":"../utils/generic_utils","loc":{"line":19,"column":28}}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar K = require(\"../backend/tfjs_backend\");\nvar common_1 = require(\"../common\");\nvar topology_1 = require(\"../engine/topology\");\nvar topology_2 = require(\"../engine/topology\");\nvar errors_1 = require(\"../errors\");\nvar conv_utils_1 = require(\"../utils/conv_utils\");\nvar generic_utils = require(\"../utils/generic_utils\");\nvar Pooling1D = (function (_super) {\n    __extends(Pooling1D, _super);\n    function Pooling1D(config) {\n        var _this = this;\n        if (config.poolSize == null) {\n            config.poolSize = 2;\n        }\n        _this = _super.call(this, config) || this;\n        _this.poolSize = [config.poolSize];\n        _this.strides = config.strides == null ? _this.poolSize : [config.strides];\n        _this.padding = config.padding == null ? 'valid' : config.padding;\n        common_1.checkPaddingMode(_this.padding);\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 3 })];\n        return _this;\n    }\n    Pooling1D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        length = conv_utils_1.convOutputLength(inputShape[1], this.poolSize[0], this.padding, this.strides[0]);\n        return [inputShape[0], length, inputShape[2]];\n    };\n    Pooling1D.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        inputs = K.expandDims(generic_utils.getExactlyOneTensor(inputs), 2);\n        var output = this.poolingFunction(generic_utils.getExactlyOneTensor(inputs), [this.poolSize[0], 1], [this.strides[0], 1], this.padding, 'channelsLast');\n        return K.squeeze(output, 2);\n    };\n    Pooling1D.prototype.getConfig = function () {\n        var config = {\n            poolSize: this.poolSize,\n            padding: this.padding,\n            strides: this.strides,\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Pooling1D;\n}(topology_2.Layer));\nexports.Pooling1D = Pooling1D;\nvar MaxPooling1D = (function (_super) {\n    __extends(MaxPooling1D, _super);\n    function MaxPooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    MaxPooling1D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        common_1.checkDataFormat(dataFormat);\n        common_1.checkPaddingMode(padding);\n        return K.pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\n    };\n    return MaxPooling1D;\n}(Pooling1D));\nexports.MaxPooling1D = MaxPooling1D;\ngeneric_utils.ClassNameMap.register('MaxPooling1D', MaxPooling1D);\nvar AvgPooling1D = (function (_super) {\n    __extends(AvgPooling1D, _super);\n    function AvgPooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    AvgPooling1D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        common_1.checkDataFormat(dataFormat);\n        common_1.checkPaddingMode(padding);\n        return K.pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\n    };\n    return AvgPooling1D;\n}(Pooling1D));\nexports.AvgPooling1D = AvgPooling1D;\ngeneric_utils.ClassNameMap.register('AvgPooling1D', AvgPooling1D);\nvar Pooling2D = (function (_super) {\n    __extends(Pooling2D, _super);\n    function Pooling2D(config) {\n        var _this = this;\n        if (config.poolSize == null) {\n            config.poolSize = [2, 2];\n        }\n        _this = _super.call(this, config) || this;\n        _this.poolSize = Array.isArray(config.poolSize) ?\n            config.poolSize :\n            [config.poolSize, config.poolSize];\n        _this.strides = config.strides == null ? _this.poolSize : config.strides;\n        _this.padding = config.padding == null ? 'valid' : config.padding;\n        _this.dataFormat =\n            config.dataFormat == null ? 'channelsLast' : config.dataFormat;\n        common_1.checkDataFormat(_this.dataFormat);\n        common_1.checkPaddingMode(_this.padding);\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 4 })];\n        return _this;\n    }\n    Pooling2D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = generic_utils.getExactlyOneShape(inputShape);\n        var rows = this.dataFormat === 'channelsFirst' ? inputShape[2] : inputShape[1];\n        var cols = this.dataFormat === 'channelsFirst' ? inputShape[3] : inputShape[2];\n        rows =\n            conv_utils_1.convOutputLength(rows, this.poolSize[0], this.padding, this.strides[0]);\n        cols =\n            conv_utils_1.convOutputLength(cols, this.poolSize[1], this.padding, this.strides[1]);\n        if (this.dataFormat === 'channelsFirst') {\n            return [inputShape[0], inputShape[1], rows, cols];\n        }\n        else {\n            return [inputShape[0], rows, cols, inputShape[3]];\n        }\n    };\n    Pooling2D.prototype.call = function (inputs, kwargs) {\n        this.invokeCallHook(inputs, kwargs);\n        return this.poolingFunction(generic_utils.getExactlyOneTensor(inputs), this.poolSize, this.strides, this.padding, this.dataFormat);\n    };\n    Pooling2D.prototype.getConfig = function () {\n        var config = {\n            poolSize: this.poolSize,\n            padding: this.padding,\n            strides: this.strides,\n            dataFormat: this.dataFormat\n        };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return Pooling2D;\n}(topology_2.Layer));\nexports.Pooling2D = Pooling2D;\nvar MaxPooling2D = (function (_super) {\n    __extends(MaxPooling2D, _super);\n    function MaxPooling2D(config) {\n        return _super.call(this, config) || this;\n    }\n    MaxPooling2D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        common_1.checkDataFormat(dataFormat);\n        common_1.checkPaddingMode(padding);\n        return K.pool2d(inputs, poolSize, strides, padding, dataFormat, 'max');\n    };\n    return MaxPooling2D;\n}(Pooling2D));\nexports.MaxPooling2D = MaxPooling2D;\ngeneric_utils.ClassNameMap.register('MaxPooling2D', MaxPooling2D);\nvar AvgPooling2D = (function (_super) {\n    __extends(AvgPooling2D, _super);\n    function AvgPooling2D(config) {\n        return _super.call(this, config) || this;\n    }\n    AvgPooling2D.prototype.poolingFunction = function (inputs, poolSize, strides, padding, dataFormat) {\n        common_1.checkDataFormat(dataFormat);\n        common_1.checkPaddingMode(padding);\n        return K.pool2d(inputs, poolSize, strides, padding, dataFormat, 'avg');\n    };\n    return AvgPooling2D;\n}(Pooling2D));\nexports.AvgPooling2D = AvgPooling2D;\ngeneric_utils.ClassNameMap.register('AvgPooling2D', AvgPooling2D);\nvar GlobalPooling1D = (function (_super) {\n    __extends(GlobalPooling1D, _super);\n    function GlobalPooling1D(config) {\n        var _this = _super.call(this, config) || this;\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 3 })];\n        return _this;\n    }\n    GlobalPooling1D.prototype.computeOutputShape = function (inputShape) {\n        return [inputShape[0], inputShape[2]];\n    };\n    GlobalPooling1D.prototype.call = function (inputs, kwargs) {\n        throw new errors_1.NotImplementedError();\n    };\n    return GlobalPooling1D;\n}(topology_2.Layer));\nexports.GlobalPooling1D = GlobalPooling1D;\nvar GlobalAveragePooling1D = (function (_super) {\n    __extends(GlobalAveragePooling1D, _super);\n    function GlobalAveragePooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    GlobalAveragePooling1D.prototype.call = function (inputs, kwargs) {\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        return K.mean(input, 1);\n    };\n    return GlobalAveragePooling1D;\n}(GlobalPooling1D));\nexports.GlobalAveragePooling1D = GlobalAveragePooling1D;\ngeneric_utils.ClassNameMap.register('GlobalAveragePooling1D', GlobalAveragePooling1D);\nvar GlobalMaxPooling1D = (function (_super) {\n    __extends(GlobalMaxPooling1D, _super);\n    function GlobalMaxPooling1D(config) {\n        return _super.call(this, config) || this;\n    }\n    GlobalMaxPooling1D.prototype.call = function (inputs, kwargs) {\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        return K.max(input, 1);\n    };\n    return GlobalMaxPooling1D;\n}(GlobalPooling1D));\nexports.GlobalMaxPooling1D = GlobalMaxPooling1D;\ngeneric_utils.ClassNameMap.register('GlobalMaxPooling1D', GlobalMaxPooling1D);\nvar GlobalPooling2D = (function (_super) {\n    __extends(GlobalPooling2D, _super);\n    function GlobalPooling2D(config) {\n        var _this = _super.call(this, config) || this;\n        _this.dataFormat =\n            config.dataFormat == null ? 'channelsLast' : config.dataFormat;\n        common_1.checkDataFormat(_this.dataFormat);\n        _this.inputSpec = [new topology_1.InputSpec({ ndim: 4 })];\n        return _this;\n    }\n    GlobalPooling2D.prototype.computeOutputShape = function (inputShape) {\n        inputShape = inputShape;\n        if (this.dataFormat === 'channelsLast') {\n            return [inputShape[0], inputShape[3]];\n        }\n        else {\n            return [inputShape[0], inputShape[1]];\n        }\n    };\n    GlobalPooling2D.prototype.call = function (inputs, kwargs) {\n        throw new errors_1.NotImplementedError();\n    };\n    GlobalPooling2D.prototype.getConfig = function () {\n        var config = { dataFormat: this.dataFormat };\n        var baseConfig = _super.prototype.getConfig.call(this);\n        Object.assign(config, baseConfig);\n        return config;\n    };\n    return GlobalPooling2D;\n}(topology_2.Layer));\nexports.GlobalPooling2D = GlobalPooling2D;\nvar GlobalAveragePooling2D = (function (_super) {\n    __extends(GlobalAveragePooling2D, _super);\n    function GlobalAveragePooling2D() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalAveragePooling2D.prototype.call = function (inputs, kwargs) {\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        if (this.dataFormat === 'channelsLast') {\n            return K.mean(input, [1, 2]);\n        }\n        else {\n            return K.mean(input, [2, 3]);\n        }\n    };\n    return GlobalAveragePooling2D;\n}(GlobalPooling2D));\nexports.GlobalAveragePooling2D = GlobalAveragePooling2D;\ngeneric_utils.ClassNameMap.register('GlobalAveragePooling2D', GlobalAveragePooling2D);\nvar GlobalMaxPooling2D = (function (_super) {\n    __extends(GlobalMaxPooling2D, _super);\n    function GlobalMaxPooling2D() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GlobalMaxPooling2D.prototype.call = function (inputs, kwargs) {\n        var input = generic_utils.getExactlyOneTensor(inputs);\n        if (this.dataFormat === 'channelsLast') {\n            return K.max(input, [1, 2]);\n        }\n        else {\n            return K.max(input, [2, 3]);\n        }\n    };\n    return GlobalMaxPooling2D;\n}(GlobalPooling2D));\nexports.GlobalMaxPooling2D = GlobalMaxPooling2D;\ngeneric_utils.ClassNameMap.register('GlobalMaxPooling2D', GlobalMaxPooling2D);\n"},"hash":"6ce2763c6cc7ec62a5e605cff5d3e787","cacheData":{"env":{}}}
{"dependencies":[{"name":"/Users/sanghan/Desktop/tfjs-examples/mobilenet/package.json","includedInParent":true,"mtime":1522644996454},{"name":"/Users/sanghan/Desktop/tfjs-examples/mobilenet/node_modules/@tensorflow/tfjs-core/package.json","includedInParent":true,"mtime":0},{"name":"../doc","loc":{"line":9,"column":20}},{"name":"../environment","loc":{"line":10,"column":28}},{"name":"../globals","loc":{"line":11,"column":24}},{"name":"../util","loc":{"line":12,"column":19}},{"name":"./axis_util","loc":{"line":13,"column":24}},{"name":"./operation","loc":{"line":14,"column":26}},{"name":"./ops","loc":{"line":15,"column":18}}],"generated":{"js":"\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar doc_1 = require(\"../doc\");\nvar environment_1 = require(\"../environment\");\nvar globals_1 = require(\"../globals\");\nvar util = require(\"../util\");\nvar axis_util = require(\"./axis_util\");\nvar operation_1 = require(\"./operation\");\nvar ops = require(\"./ops\");\nvar ReductionOps = (function () {\n    function ReductionOps() {\n    }\n    ReductionOps.logSumExp = function (input, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var axes = axis_util.parseAxisParam(axis, input.shape);\n        var xMax = input.max(axes, true);\n        var a = input.sub(xMax);\n        var b = a.exp();\n        var c = b.sum(axes);\n        var d = c.log();\n        var res = xMax.reshape(d.shape).add(d);\n        if (keepDims) {\n            var newShape = axis_util.expandShapeToKeepDim(res.shape, axes);\n            return res.reshape(newShape);\n        }\n        return res;\n    };\n    ReductionOps.sum = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var customOp = globals_1.customGrad(function (x) {\n            var permutation = axis_util.getAxesPermutation(axes, x.rank);\n            var reductionAxes = axes;\n            var permutedX = x;\n            if (permutation != null) {\n                permutedX = x.transpose(permutation);\n                reductionAxes =\n                    axis_util.getInnerMostAxes(reductionAxes.length, x.rank);\n            }\n            var value = environment_1.ENV.engine.runKernel(function (backend) { return backend.sum(permutedX, reductionAxes); }, { permutedX: permutedX });\n            if (keepDims) {\n                var newShape = axis_util.expandShapeToKeepDim(value.shape, axes);\n                value = value.reshape(newShape);\n            }\n            var gradFunc = function (dy) {\n                var expandedDyShape = x.shape.slice();\n                axes.forEach(function (axis) {\n                    expandedDyShape[axis] = 1;\n                });\n                var expandedDy = dy.reshape(expandedDyShape);\n                var derX = expandedDy.mul(ops.ones(x.shape, 'float32'));\n                return derX;\n            };\n            return { value: value, gradFunc: gradFunc };\n        });\n        return customOp(x);\n    };\n    ReductionOps.mean = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var shapes = axis_util.computeOutAndReduceShapes(x.shape, axes);\n        var reduceShape = shapes[1];\n        var reduceSize = util.sizeFromShape(reduceShape);\n        var customOp = globals_1.customGrad(function (x) {\n            var reduceSizeScalar = ops.scalar(reduceSize);\n            var res = x.div(reduceSizeScalar);\n            var value = res.sum(axis, keepDims);\n            var gradFunc = function (dy) {\n                var expandedDyShape = x.shape.slice();\n                axes.forEach(function (axis) {\n                    expandedDyShape[axis] = 1;\n                });\n                var expandedDy = dy.reshape(expandedDyShape);\n                var derX = expandedDy.mul(ops.ones(x.shape, 'float32')).div(reduceSizeScalar);\n                return derX;\n            };\n            return { value: value, gradFunc: gradFunc };\n        });\n        return customOp(x);\n    };\n    ReductionOps.min = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\n        var axes = origAxes;\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\n        if (permutedAxes != null) {\n            x = x.transpose(permutedAxes);\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n        }\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.min(x, axes); }, { x: x });\n        if (keepDims) {\n            var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n            return res.reshape(newShape);\n        }\n        return res;\n    };\n    ReductionOps.max = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var origAxes = axis_util.parseAxisParam(axis, x.shape);\n        var axes = origAxes;\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\n        if (permutedAxes != null) {\n            x = x.transpose(permutedAxes);\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n        }\n        var res = environment_1.ENV.engine.runKernel(function (backend) { return backend.max(x, axes); }, { x: x });\n        if (keepDims) {\n            var newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n            return res.reshape(newShape);\n        }\n        return res;\n    };\n    ReductionOps.argMin = function (x, axis) {\n        if (axis === void 0) { axis = null; }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\n        if (permutedAxes != null) {\n            x = x.transpose(permutedAxes);\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n        }\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.argMin(x, axes); }, { x: x });\n    };\n    ReductionOps.argMax = function (x, axis) {\n        if (axis === void 0) { axis = null; }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var permutedAxes = axis_util.getAxesPermutation(axes, x.rank);\n        if (permutedAxes != null) {\n            x = x.transpose(permutedAxes);\n            axes = axis_util.getInnerMostAxes(axes.length, x.rank);\n        }\n        return environment_1.ENV.engine.runKernel(function (backend) { return backend.argMax(x, axes); }, { x: x });\n    };\n    ReductionOps.moments = function (x, axis, keepDims) {\n        if (axis === void 0) { axis = null; }\n        if (keepDims === void 0) { keepDims = false; }\n        var axes = axis_util.parseAxisParam(axis, x.shape);\n        var mean = x.mean(axes, keepDims);\n        var keepDimsShape = mean.shape;\n        if (!keepDims) {\n            keepDimsShape = axis_util.expandShapeToKeepDim(mean.shape, axes);\n        }\n        var devSquared = x.toFloat().sub(mean.reshape(keepDimsShape)).square();\n        var variance = devSquared.mean(axes, keepDims);\n        return { mean: mean, variance: variance };\n    };\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"logSumExp\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"sum\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"mean\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"min\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"max\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"argMin\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Reduction' }),\n        operation_1.operation\n    ], ReductionOps, \"argMax\", null);\n    __decorate([\n        doc_1.doc({ heading: 'Operations', subheading: 'Normalization' }),\n        operation_1.operation\n    ], ReductionOps, \"moments\", null);\n    return ReductionOps;\n}());\nexports.ReductionOps = ReductionOps;\n"},"hash":"f23e1dbfa6b9936976c9225ee62c2459","cacheData":{"env":{}}}